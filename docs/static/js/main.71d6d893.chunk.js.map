{"version":3,"sources":["services/GetDataFromApi.js","components/CharacterCard.js","components/CharacterList.js","components/Filters.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["GetDataFromApi","fetch","then","response","json","data","results","map","character","id","name","species","image","status","episode","origin","CharacterCard","props","className","to","title","alt","src","CharacterList","characters","length","userSearch","charElements","Filters","onSubmit","ev","preventDefault","type","value","onChange","handleFilter","target","placeholder","CharacterDetail","App","useState","setCharacters","setName","useEffect","sortAndFilterCharacters","sort","a","b","filter","toLowerCase","includes","path","exact","inputValue","render","parseInt","match","params","selectChar","find","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.71d6d893.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst GetDataFromApi = () => {\r\n  //   https://raw.githubusercontent.com/Adalab/ricky-morty/master/data/rick-y-morty.json\r\n\r\n  //rickandmortyapi.com/api/character\r\n\r\n  return fetch(\r\n    '//rickandmortyapi.com/api/character'\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          species: character.species,\r\n          image: character.image,\r\n          status: character.status,\r\n          episode: character.episode,\r\n          origin: character.origin.name,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default GetDataFromApi;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst CharacterCard = (props) => {\r\n    const { name, species, image } = props.character;\r\n  return (\r\n    <Link className=\"card\" to={`/character/${props.character.id}`}>\r\n      \r\n        <img className=\"card__img\"\r\n          title={`click to see ${name} details`}\r\n          alt={name}\r\n          src={image}\r\n        />\r\n        <div className=\"card__container\">\r\n          <h4 className=\"card__name\">{name}</h4>\r\n          <p className=\"card__species\">{species}</p>\r\n        </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nCharacterCard.propTypes ={\r\n  name: PropTypes.string,\r\n  id: PropTypes.number,\r\n  character: PropTypes.object,\r\n};\r\nexport default CharacterCard;","import React from 'react';\r\nimport CharacterCard from './CharacterCard';\r\n\r\nconst CharacterList = (props) => {\r\n\r\n  if (props.characters.length === 0) {\r\n    return (\r\n      <p>{`No hay ning√∫n personaje que coincida con la palabra:  ${props.userSearch}`}</p>\r\n    );\r\n  } else {\r\n    const charElements = props.characters.map((character) => {\r\n      return (\r\n        <li key={character.id}>\r\n          <CharacterCard character={character} />\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <section>\r\n        <ul className=\"cardList\">{charElements}</ul>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CharacterList;\r\n","\r\nimport React from 'react';\r\n\r\nconst Filters = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter(ev.target.value);\r\n  };\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        value={props.userSearch}\r\n        name=\"name\"\r\n        id=\"name\"\r\n        onChange={handleChange}\r\n        placeholder=\"...busca un personaje\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\nexport default Filters;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CharacterDetail = (props) => {\r\n  const { name, status, species, origin, image, episode } = props.character;\r\n  return (\r\n    <div className=\"detailWrapper\">\r\n      <Link className=\"detailLink\" to=\"/\">\r\n        Volver\r\n      </Link>\r\n      <article className=\"detailCard\">\r\n        <img className=\"detailCard__img\" title={name} alt={name} src={image} />\r\n        <section className=\"detailCard__sec\">\r\n          <h4 className=\"detail__name\">{name}</h4>\r\n          <ul className=\"detail__list\">\r\n            <li className=\"detail__item\">\r\n              Status: <span>{status}</span>\r\n            </li>\r\n            <li className=\"detail__item\">\r\n              Species: <span>{species}</span>\r\n            </li>\r\n            <li className=\"detail__item\">\r\n              Origin: <span>{origin}</span>\r\n            </li>\r\n            <li className=\"detail__item\">\r\n              Episodes: <span>{episode.length}</span>\r\n            </li>\r\n          </ul>\r\n        </section>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.number,\r\n  character: PropTypes.object,\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport GetDataFromApi from '../services/GetDataFromApi';\nimport '../stylesheets/App.scss';\nimport CharacterList from './CharacterList';\nimport Filters from './Filters';\nimport CharacterDetail from './CharacterDetail';\n\nconst App = (props) => {\n  const [characters, setCharacters] = useState([]);\n  const [name, setName] = useState('');\n\n  \n\n  useEffect(() => {\n    GetDataFromApi().then((data) => \n    setCharacters(data));\n  }, []);\n\n  const handleFilter = (inputValue) => {\n    setName(inputValue);\n  };\n\n  const sortAndFilterCharacters = characters.sort( (a, b) => a.name > b.name ? 1 : - 1)\n  .filter((character) => {\n    return character.name.toLowerCase().includes(name.toLowerCase());\n  });\n\n  const renderDetail = (props) => {\n    const id = parseInt(props.match.params.id);\n\n    const selectChar = characters.find((character) => {\n      return character.id === id;\n    });\n\n    return selectChar ? (\n      <CharacterDetail character={selectChar} />\n    ) : (\n      <p>{`El id ${props.match.params.id} no existe`}</p>\n    );\n  };\n\n  const logo = './Rick_and_Morty.png';\n  const alt = 'logo';\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">\n        <img className=\"logo\" src={logo} alt={alt} title={alt} />\n      </h1>\n\n      <Switch>\n        <Route path=\"/\" exact>\n          <Filters handleFilter={handleFilter} userSearch={name} />\n          <CharacterList characters={sortAndFilterCharacters} userSearch={name} />\n        </Route>\n        <Route path=\"/character/:id\" render={renderDetail} />\n      </Switch>\n      </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}