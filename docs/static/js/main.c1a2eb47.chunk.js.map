{"version":3,"sources":["services/GetDataFromApi.js","components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["GetDataFromApi","fetch","then","response","json","data","results","map","character","id","name","species","image","status","episode","origin","Header","alt","className","src","title","Filters","props","onSubmit","ev","preventDefault","type","value","userSearch","onChange","handleFilter","target","placeholder","CharacterCard","to","aria-hidden","CharacterList","characters","length","charElements","CharacterDetail","App","useState","setCharacters","setName","useEffect","sortAndFilterCharacters","sort","a","b","filter","toLowerCase","includes","path","exact","inputValue","render","parseInt","match","params","selectChar","find","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c1a2eb47.chunk.js","sourcesContent":["const GetDataFromApi = () => {\r\n  return fetch(\r\n    '//rickandmortyapi.com/api/character'\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          species: character.species,\r\n          image: character.image,\r\n          status: character.status,\r\n          episode: character.episode,\r\n          origin: character.origin.name,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default GetDataFromApi;\r\n","import React from 'react';\r\nimport '../stylesheets/layout/_header.scss';\r\n\r\nconst Header = () => {\r\n  const logo = './Rick_and_Morty.png';\r\n  const alt = 'logo';\r\n\r\n  return (\r\n    <h1 className=\"logoContainer\">\r\n      <img className=\"logo\" src={logo} alt={alt} title={alt} />\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../stylesheets/layout/_filter.scss';\r\n\r\nconst Filters = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter(ev.target.value);\r\n  };\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        value={props.userSearch}\r\n        name=\"name\"\r\n        id=\"name\"\r\n        onChange={handleChange}\r\n        placeholder=\"...busca un personaje\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\nexport default Filters;\r\n","import React from 'react';\r\nimport '../stylesheets/layout/_card.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CharacterCard = (props) => {\r\n  const { name, species, image, status } = props.character;\r\n\r\n  const deadStatus = () =>\r\n    status === 'Dead' ? (\r\n      <i\r\n        title={`Status: ${status}`}\r\n        className=\"icon--status fa fa-hackaday\"\r\n        aria-hidden=\"true\"\r\n      ></i>\r\n    ) : (\r\n      ''\r\n    );\r\n\r\n  const speciesIcon = () =>\r\n    species === 'Alien' ? (\r\n      <i title={`Specie: ${species}`} className=\"icon fa fa-reddit-alien\"></i>\r\n    ) : (\r\n      <i\r\n        title={`Specie: ${species}`}\r\n        className=\"icon fa fa-universal-access\"\r\n      ></i>\r\n    );\r\n\r\n  return (\r\n    <Link className=\"cardLink\" to={`/character/${props.character.id}`}>\r\n      <div className=\"card\">\r\n        <img\r\n          className=\"card__img\"\r\n          title={`click to see ${name} details`}\r\n          alt={name}\r\n          src={image}\r\n        />\r\n        <div className=\"card__container\">\r\n          <h4 className=\"card__name\">{name}</h4>\r\n          <span>{speciesIcon()}</span> <span>{deadStatus()}</span>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.number,\r\n  character: PropTypes.object,\r\n};\r\nexport default CharacterCard;\r\n","import React from 'react';\r\nimport '../stylesheets/layout/_list.scss';\r\nimport CharacterCard from './CharacterCard';\r\n\r\nconst CharacterList = (props) => {\r\n  if (props.characters.length === 0) {\r\n    return (\r\n      <p className=\"msg\">{`No hay ning√∫n personaje que coincida con la palabra:  ${props.userSearch}`}</p>\r\n    );\r\n  } else {\r\n    const charElements = props.characters.map((character) => {\r\n      return (\r\n        <li key={character.id}>\r\n          <CharacterCard character={character} />\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <section>\r\n        <ul className=\"cardList\">{charElements}</ul>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from 'react';\r\nimport '../stylesheets/layout/_detail.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CharacterDetail = (props) => {\r\n  const { name, status, species, origin, image, episode } = props.character;\r\n  return (\r\n    <div className=\"detail\">\r\n      <div className=\"detailWrapper\">\r\n        <Link className=\"detailLink\" to=\"/\">\r\n          <i className=\"detailLink--arrow fa fa-arrow-left\"></i>\r\n          Volver\r\n        </Link>\r\n        <article className=\"detailCard\">\r\n          <img\r\n            className=\"detailCard__img\"\r\n            title={name}\r\n            alt={name}\r\n            src={image}\r\n          />\r\n          <section className=\"detailCard__sec\">\r\n            <h4 className=\"detailCard__name\">{name}</h4>\r\n            <ul className=\"detailCard__list\">\r\n              <li className=\"detailCard__item\">\r\n                Status: <span>{status}</span>\r\n              </li>\r\n              <li className=\"detailCard__item\">\r\n                Species: <span>{species}</span>\r\n              </li>\r\n              <li className=\"detailCard__item\">\r\n                Origin: <span>{origin}</span>\r\n              </li>\r\n              <li className=\"detailCard__item\">\r\n                Episodes: <span>{episode.length}</span>\r\n              </li>\r\n            </ul>\r\n          </section>\r\n        </article>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.number,\r\n  character: PropTypes.object,\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport '../stylesheets/App.scss';\nimport GetDataFromApi from '../services/GetDataFromApi';\nimport Header from './Header';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    GetDataFromApi().then((data) => setCharacters(data));\n  }, []);\n\n  const handleFilter = (inputValue) => {\n    setName(inputValue);\n  };\n\n  const sortAndFilterCharacters = characters\n    .sort((a, b) => (a.name > b.name ? 1 : -1))\n    .filter((character) => {\n      return character.name.toLowerCase().includes(name.toLowerCase());\n    });\n\n  const renderDetail = (props) => {\n    const id = parseInt(props.match.params.id);\n\n    const selectChar = characters.find((character) => {\n      return character.id === id;\n    });\n\n    return selectChar ? (\n      <CharacterDetail character={selectChar} />\n    ) : (\n      <p className=\"msg\">{`El id ${props.match.params.id} no existe`}</p>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Filters handleFilter={handleFilter} userSearch={name} />\n          <CharacterList\n            characters={sortAndFilterCharacters}\n            userSearch={name}\n          />\n        </Route>\n        <Route path=\"/character/:id\" render={renderDetail} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}